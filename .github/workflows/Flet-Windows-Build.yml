name: Flet Windows Build with Installer

on:
  push:
    tags: ['v*']
  workflow_dispatch:
    inputs:
      test_version:
        description: 'ÊµãËØïÁâàÊú¨Âè∑'
        required: true
        default: 'v0.1.0-test'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: x64

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync
          uv add flet

      - name: Build with flet
        run: |
          if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            $VERSION = "${{ github.event.inputs.test_version }}"
          } else {
            $VERSION = "${{ github.ref_name }}"
          }
          
          $env:PYTHONIOENCODING = "utf-8"
          $env:PYTHONUTF8 = "1"
          
          uv run flet build windows --build-version $VERSION
        shell: powershell

      # Êñ∞Â¢ûÔºöÂÆâË£Ö Inno Setup
      - name: Install Inno Setup
        run: |
          choco install innosetup -y
        shell: powershell

      # Êñ∞Â¢ûÔºöÂàõÂª∫ Inno Setup ËÑöÊú¨
      - name: Create Inno Setup script
        shell: powershell
        run: |
          $version = if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            "${{ github.event.inputs.test_version }}"
          } else {
            "${{ github.ref_name }}"
          }
          
          $versionClean = $version -replace '^v', ''
          
          $innoScript = @"
          [Setup]
          AppName=SwissKit
          AppVersion=$versionClean
          AppPublisher=Your Company Name
          AppPublisherURL=https://github.com/${{ github.repository }}
          DefaultDirName={autopf}\SwissKit
          DefaultGroupName=SwissKit
          UninstallDisplayName=SwissKit
          Compression=lzma2
          SolidCompression=yes
          OutputDir=installer
          OutputBaseFilename=SwissKit-Setup-$versionClean
          SetupIconFile=build\windows\SwissKit.exe
          WizardStyle=modern
          PrivilegesRequired=lowest
          ArchitecturesAllowed=x64compatible
          ArchitecturesInstallIn64BitMode=x64compatible
          
          [Languages]
          Name: "english"; MessagesFile: "compiler:Default.isl"
          Name: "chinesesimplified"; MessagesFile: "compiler:Languages\ChineseSimplified.isl"
          
          [Tasks]
          Name: "desktopicon"; Description: "ÂàõÂª∫Ê°åÈù¢Âø´Êç∑ÊñπÂºè"; GroupDescription: "ÈôÑÂä†ÂõæÊ†á:"
          Name: "startmenu"; Description: "ÂàõÂª∫ÂºÄÂßãËèúÂçïÂø´Êç∑ÊñπÂºè"; GroupDescription: "ÈôÑÂä†ÂõæÊ†á:"; Flags: checkedonce
          
          [Files]
          Source: "build\windows\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
          
          [Icons]
          Name: "{group}\SwissKit"; Filename: "{app}\SwissKit.exe"
          Name: "{autodesktop}\SwissKit"; Filename: "{app}\SwissKit.exe"; Tasks: desktopicon
          Name: "{userstartmenu}\SwissKit"; Filename: "{app}\SwissKit.exe"; Tasks: startmenu
          
          [Run]
          Filename: "{app}\SwissKit.exe"; Description: "ÂêØÂä® SwissKit"; Flags: nowait postinstall skipifsilent
          
          [UninstallDelete]
          Type: filesandordirs; Name: "{app}"
          "@
          
          New-Item -ItemType Directory -Path "installer" -Force
          $innoScript | Out-File -FilePath "swisskit.iss" -Encoding UTF8

      # Êñ∞Â¢ûÔºöÊûÑÂª∫ÂÆâË£ÖÂåÖ
      - name: Build installer
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "swisskit.iss"
        shell: powershell

      # ‰øÆÊîπÔºöÂêåÊó∂ÊâìÂåÖZIPÂíåÂÆâË£ÖÂåÖ
      - name: Package builds
        shell: powershell
        run: |
          $version = if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            "${{ github.event.inputs.test_version }}"
          } else {
            "${{ github.ref_name }}"
          }
          
          $artifactName = "swisskit-windows-x64-$version"
          
          # ÂàõÂª∫ZIPÂåÖ
          New-Item -ItemType Directory -Path "release\$artifactName" -Force
          Copy-Item -Path "build\windows\*" -Destination "release\$artifactName" -Recurse
          Compress-Archive -Path "release\$artifactName" -DestinationPath "build\$artifactName.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            build/*.zip
            installer/*.exe
            build/windows/SwissKit.exe

  release:
    needs: build-windows
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.test_version || github.ref_name }}
          name: SwissKit Release ${{ github.event.inputs.test_version || github.ref_name }}
          files: |
            artifacts/**/*
          body: |
            ## Windows ÁâàÊú¨‰∏ãËΩΩ
            
            ### üöÄ Êé®Ëçê‰∏ãËΩΩÔºàÂÆâË£ÖÂåÖÔºâ
            - **SwissKit-Setup-[ÁâàÊú¨Âè∑].exe** - Windows ÂÆâË£ÖÁ®ãÂ∫è
              - Ëá™Âä®ÂÆâË£ÖÂà∞Á≥ªÁªü
              - ÂàõÂª∫Ê°åÈù¢ÂíåÂºÄÂßãËèúÂçïÂø´Êç∑ÊñπÂºè
              - ÊîØÊåÅ‰∏ÄÈîÆÂç∏ËΩΩ
              - ÈÄÇÂêàÈïøÊúü‰ΩøÁî®
            
            ### üì¶ ‰æøÊê∫ÁâàÔºàZIPÂåÖÔºâ
            - **swisskit-windows-x64-[ÁâàÊú¨Âè∑].zip** - ÁªøËâ≤ÂÖçÂÆâË£ÖÁâà
              - Ëß£ÂéãÂç≥Áî®
              - ‰∏ç‰øÆÊîπÁ≥ªÁªüÊñá‰ª∂
              - ÈÄÇÂêà‰∏¥Êó∂‰ΩøÁî®ÊàñÊµãËØï
            
            ### ‰ΩøÁî®ËØ¥Êòé
            
            **ÂÆâË£ÖÂåÖÁâàÊú¨Ôºö**
            1. ‰∏ãËΩΩ `.exe` ÂÆâË£ÖÊñá‰ª∂
            2. ÂèåÂáªËøêË°åÂÆâË£ÖÁ®ãÂ∫è
            3. ÊåâÁÖßÂêëÂØºÂÆåÊàêÂÆâË£Ö
            4. ‰ªéÊ°åÈù¢ÊàñÂºÄÂßãËèúÂçïÂêØÂä®Á®ãÂ∫è
            
            **‰æøÊê∫ÁâàÔºö**
            1. ‰∏ãËΩΩZIPÊñá‰ª∂Âπ∂Ëß£Âéã
            2. ËøêË°åÊñá‰ª∂Â§πÂÜÖÁöÑ `SwissKit.exe`
            3. Â¶ÇÈÅáÂÆâÂÖ®Ë≠¶ÂëäÔºåÈÄâÊã©"Êõ¥Â§ö‰ø°ÊÅØ"‚Üí"‰ªçË¶ÅËøêË°å"
            
            > **Á≥ªÁªüË¶ÅÊ±ÇÔºö** Windows 10/11 (x64)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
