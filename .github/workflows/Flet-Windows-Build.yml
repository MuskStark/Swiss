name: Flet Windows Build with Installer

on:
  push:
    tags: ['v*']
  workflow_dispatch:
    inputs:
      test_version:
        description: '测试版本号'
        required: true
        default: 'v0.1.0-test'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: x64

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync
          uv add flet

      - name: Build with flet
        run: |
          if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            $VERSION = "${{ github.event.inputs.test_version }}"
          } else {
            $VERSION = "${{ github.ref_name }}"
          }
          
          $env:PYTHONIOENCODING = "utf-8"
          $env:PYTHONUTF8 = "1"
          
          uv run flet build windows --build-version $VERSION
        shell: powershell

      # 新增：安装 Inno Setup
      - name: Install Inno Setup
        run: |
          choco install innosetup -y
        shell: powershell

      # 新增：创建 Inno Setup 脚本
      - name: Create Inno Setup script
        shell: powershell
        run: |
          $version = if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            "${{ github.event.inputs.test_version }}"
          } else {
            "${{ github.ref_name }}"
          }
          
          $versionClean = $version -replace '^v', ''
          
          $innoScript = @"
          [Setup]
          AppName=SwissKit
          AppVersion=$versionClean
          AppPublisher=Your Company Name
          AppPublisherURL=https://github.com/${{ github.repository }}
          DefaultDirName={autopf}\SwissKit
          DefaultGroupName=SwissKit
          UninstallDisplayName=SwissKit
          Compression=lzma2
          SolidCompression=yes
          OutputDir=installer
          OutputBaseFilename=SwissKit-Setup-$versionClean
          WizardStyle=modern
          PrivilegesRequired=lowest
          ArchitecturesAllowed=x64compatible
          ArchitecturesInstallIn64BitMode=x64compatible
          
          [Languages]
          Name: "english"; MessagesFile: "compiler:Default.isl"
          
          [Tasks]
          Name: "desktopicon"; Description: "Create a desktop shortcut"; GroupDescription: "Additional shortcuts:"
          Name: "startmenu"; Description: "Create a start menu shortcut"; GroupDescription: "Additional shortcuts:"; Flags: checkedonce
          
          [Files]
          Source: "build\windows\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
          
          [Icons]
          Name: "{group}\SwissKit"; Filename: "{app}\SwissKit.exe"
          Name: "{autodesktop}\SwissKit"; Filename: "{app}\SwissKit.exe"; Tasks: desktopicon
          Name: "{userstartmenu}\SwissKit"; Filename: "{app}\SwissKit.exe"; Tasks: startmenu
          
          [Run]
          Filename: "{app}\SwissKit.exe"; Description: "Launch SwissKit"; Flags: nowait postinstall skipifsilent
          
          [UninstallDelete]
          Type: filesandordirs; Name: "{app}"
          "@
          
          New-Item -ItemType Directory -Path "installer" -Force
          $innoScript | Out-File -FilePath "swisskit.iss" -Encoding UTF8

      # 新增：构建安装包
      - name: Build installer
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "swisskit.iss"
        shell: powershell

      # 修改：同时打包ZIP和安装包
      - name: Package builds
        shell: powershell
        run: |
          $version = if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            "${{ github.event.inputs.test_version }}"
          } else {
            "${{ github.ref_name }}"
          }
          
          $artifactName = "swisskit-windows-x64-$version"
          
          # 创建ZIP包
          New-Item -ItemType Directory -Path "release\$artifactName" -Force
          Copy-Item -Path "build\windows\*" -Destination "release\$artifactName" -Recurse
          Compress-Archive -Path "release\$artifactName" -DestinationPath "build\$artifactName.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            build/*.zip
            installer/*.exe

  release:
    needs: build-windows
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.test_version || github.ref_name }}
          name: SwissKit Release ${{ github.event.inputs.test_version || github.ref_name }}
          files: |
            artifacts/**/*
          body: |
            ## Windows Version Downloads
            
            ### 🚀 Recommended (Installer)
            - **SwissKit-Setup-[version].exe** - Windows Installer
              - Automatically installs to system
              - Creates desktop and start menu shortcuts
              - Supports one-click uninstall
              - Best for regular use
            
            ### 📦 Portable Version (ZIP)
            - **swisskit-windows-x64-[version].zip** - Portable version
              - Extract and run
              - No system modifications
              - Best for testing or temporary use
            
            ### Installation Instructions
            
            **Installer Version:**
            1. Download the `.exe` installer file
            2. Double-click to run the installer
            3. Follow the setup wizard
            4. Launch from desktop or start menu
            
            **Portable Version:**
            1. Download and extract the ZIP file
            2. Run `SwissKit.exe` from the extracted folder
            3. If you see a security warning, click "More info" → "Run anyway"
            
            > **System Requirements:** Windows 10/11 (x64)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
